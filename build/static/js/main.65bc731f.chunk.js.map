{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","onChange","PersonForm","onSubmit","nameValue","nameHandler","numberValue","numberHandler","type","Persons","persons","removePerson","map","person","i","key","name","number","onClick","id","baseUrl","axios","get","then","response","data","newPerson","post","delete","put","Notification","message","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","showAll","setShowAll","setMessage","useEffect","personService","returnedPerson","personsToShow","filter","toLowerCase","includes","event","target","length","preventDefault","personFound","find","window","confirm","changedPerson","setTimeout","catch","error","p","concat","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65bc731f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n    return( \n    <div>filter shown with\n        <input \n          value={props.value} onChange={props.onChange}\n        />\n\n      </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit={props.onSubmit}>\n        <h2>add a new</h2>\n        <div>name\n          <input \n            value={props.nameValue} onChange={props.nameHandler}\n          />\n        </div>\n        <div>number\n          <input\n            value={props.numberValue} onChange={props.numberHandler}\n          />\n        </div>\n        <div><button type=\"submit\">add</button></div>        \n      </form>\n    )\n\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({persons, removePerson}) => {\n    return (\n        <ul>\n        {persons.map((person, i) => \n          <li key={person.name}> {person.name} {person.number} \n            <button onClick={ () => removePerson(person.id)}>delete</button>\n          </li> \n        )}\n      </ul>\n        \n    )\n\n    \n}\n\nexport default Persons","import axios from 'axios'\n\n//const baseUrl = 'http://localhost:3001/api/persons'\n//const baseUrl = 'https://thawing-dawn-25992.herokuapp.com/api/persons'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request\n}\n\nconst update = (id, newPerson) => {\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\n    return request.then(response => response.data)\n}\n\nexport default {getAll, create, remove, update}","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"notification\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport './App.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ showAll, setShowAll ] = useState(true) \n  const [ message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then( returnedPerson => {\n        setPersons(returnedPerson)\n      })\n\n      \n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    //console.log('button pressed', event.target)\n    const personFound = persons.find(person => person.name === newName)\n    if (!personFound) {\n\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      \n      }\n\n      \n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setMessage(\n            `Added '${returnedPerson.name}'`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          setMessage(error.response.data.error)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n \n    }\n    else {\n      \n      if(window.confirm(`${newName} is already added to phonebook with number ${personFound.number}. Do you want to replace the number with ${newNumber}?`)){\n        \n        const changedPerson = { ...personFound, number: newNumber }\n        personService\n          .update(personFound.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== personFound.id ? person : returnedPerson))\n            setMessage(\n              `Updated number for '${personFound.name}'`\n            )\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            if(error.response.data.name === 'ValidationError') {\n              setMessage( error.response.data.error)\n            } else { \n              setMessage( `the person '${personFound.name}' was already deleted from server`)\n              setPersons(persons.filter(p => p.id !== personFound.id))\n            }\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n       \n\n        \n      }\n      \n    }\n    setNewName('')\n    setNewNumber('')\n    \n  }\n\n  const handleNameChange = (event) => {\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n    \n  }\n\n  const handleNumberChange = (event) => {\n    //console.log(event.target.value)\n    setNewNumber(event.target.value)\n    \n  }\n\n\n  const handleFilterChange = (event) => {\n    \n    setNewFilter(event.target.value)  \n    setShowAll(event.target.value.length === 0)\n    \n  }\n\n  const deletePersonById = (id) => {\n    //console.log(\"person \" + event + \" needs to be deleted\" )\n    if (window.confirm(`Delete '${persons.find(p=>p.id===id).name}' ?`)) {\n      personService\n        .remove(id)\n        .then(setPersons(persons.filter(p => p.id !== id)))\n        .then(          \n          setMessage(`Deleted '${persons.find(p=>p.id === id).name}'`),\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        )\n\n        .catch(error => {\n          setMessage(`the person was already deleted from server`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n         setPersons(persons.filter(p => p.id !== id))\n        })\n    }\n  }\n\n  const personsToShow = showAll \n    ? persons \n    : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  return (\n    <div>\n\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter \n        value={newFilter} \n        onChange={handleFilterChange} \n      />\n\n      <PersonForm \n        onSubmit={addPerson} \n        nameValue={newName} \n        numberValue={newNumber} \n        nameHandler={handleNameChange} \n        numberHandler={handleNumberChange} \n      />\n      \n      <h2>Numbers</h2>\n      \n      <Persons \n        persons={personsToShow} \n        removePerson = {deletePersonById}\n      />\n\n      \n\n\n\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}